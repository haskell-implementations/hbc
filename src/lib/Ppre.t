import _bitrsha: (_Int->(_Int->_Int)) {# ARITY _ = 2 #}{# STRICTNESS _ = "0&1,0&1" ST #};
import _bitrsh: (_Int->(_Int->_Int)) {# ARITY _ = 2 #}{# STRICTNESS _ = "0&1,0&1" ST #};
import _bitlsh: (_Int->(_Int->_Int)) {# ARITY _ = 2 #}{# STRICTNESS _ = "0&1,0&1" ST #};
import _bitcompl: (_Int->_Int) {# ARITY _ = 1 #}{# STRICTNESS _ = "0,0" ST #};
import _bitxor: (_Int->(_Int->_Int)) {# ARITY _ = 2 #}{# STRICTNESS _ = "0&1,0&1" ST #};
import _bitor: (_Int->(_Int->_Int)) {# ARITY _ = 2 #}{# STRICTNESS _ = "0&1,0&1" ST #};
import _bitand: (_Int->(_Int->_Int)) {# ARITY _ = 2 #}{# STRICTNESS _ = "0&1,0&1" ST #};
import _-#: (_Integer->(_Integer->_Integer)) {# ARITY _ = 2 #}{# STRICTNESS _ = "0&1,F" ST #};
import _+#: (_Integer->(_Integer->_Integer)) {# ARITY _ = 2 #}{# STRICTNESS _ = "0&1,F" ST #};
import _%#: (_Integer->(_Integer->_Integer)) {# ARITY _ = 2 #}{# STRICTNESS _ = "0&1,F" ST #};
import _/#: (_Integer->(_Integer->_Integer)) {# ARITY _ = 2 #}{# STRICTNESS _ = "0&1,F" ST #};
import _*#: (_Integer->(_Integer->_Integer)) {# ARITY _ = 2 #}{# STRICTNESS _ = "0&1,F" ST #};
import PFloatNeg: (_Double->_Double) {# ARITY _ = 1 #}{# STRICTNESS _ = "0,0" ST #};
import _-.: (_Double->(_Double->_Double)) {# ARITY _ = 2 #}{# STRICTNESS _ = "0&1,0&1" ST #};
import _+.: (_Double->(_Double->_Double)) {# ARITY _ = 2 #}{# STRICTNESS _ = "0&1,0&1" ST #};
import _/.: (_Double->(_Double->_Double)) {# ARITY _ = 2 #}{# STRICTNESS _ = "0&1,F" ST #};
import _*.: (_Double->(_Double->_Double)) {# ARITY _ = 2 #}{# STRICTNESS _ = "0&1,0&1" ST #};
import Prindexu: ((_LArray *a)->(_Int->*a)) {# ARITY _ = 0 #}{# STRICTNESS _ = "T,F" ST #};
import Prindex: ((_LArray *a)->(_Int->*a)) {# ARITY _ = 0 #}{# STRICTNESS _ = "T,F" ST #};
import _-: (_Int->(_Int->_Int)) {# ARITY _ = 2 #}{# STRICTNESS _ = "0&1,0&1" ST #};
import _+: (_Int->(_Int->_Int)) {# ARITY _ = 2 #}{# STRICTNESS _ = "0&1,0&1" ST #};
import _%: (_Int->(_Int->_Int)) {# ARITY _ = 2 #}{# STRICTNESS _ = "0&1,F" ST #};
import _/: (_Int->(_Int->_Int)) {# ARITY _ = 2 #}{# STRICTNESS _ = "0&1,F" ST #};
import _*: (_Int->(_Int->_Int)) {# ARITY _ = 2 #}{# STRICTNESS _ = "0&1,0&1" ST #};
import _^: (_Int->(_Int->_Int)) {# ARITY _ = 2 #}{# STRICTNESS _ = "1,F" ST #};
import _??: ((_List *a)->(_Int->*a)) {# ARITY _ = 2 #}{# STRICTNESS _ = "0&1,F" ST #};
import _?: ((_LArray *a)->(_Int->*a)) {# ARITY _ = 2 #}{# STRICTNESS _ = "0&1,F" ST #};
import Pcno: (*a->_Int) {# ARITY _ = 1 #}{# STRICTNESS _ = "0,0" ST #};
import Pseq: (*a->(*b->*b)) {# ARITY _ = 2 #}{# STRICTNESS _ = "0&1,F" ST #};
import _o: ((*a->*b)->((*c->*a)->(*c->*b))) {# ARITY _ = 3 #}{# STRICTNESS _ = "T,F" ST #};
import P,: (*a->(*b->(*a # *b))) {# ARITY _ = 2 #}{# STRICTNESS _ = "T,T" ST #};
import _~: (_Bool->_Bool) {# ARITY _ = 1 #}{# STRICTNESS _ = "0,0" ST #};
import _&: (_Bool->(_Bool->_Bool)) {# ARITY _ = 2 #}{# STRICTNESS _ = "0,0&1" ST #};
import _|: (_Bool->(_Bool->_Bool)) {# ARITY _ = 2 #}{# STRICTNESS _ = "0,0&1" ST #};
import Ptag: (_Int->_Char) {# ARITY _ = 1 #}{# STRICTNESS _ = "0,0" ST #};
import _chr: (_Int->_Char) {# ARITY _ = 1 #}{# STRICTNESS _ = "0,0" ST #};
import _ord: (_Char->_Int) {# ARITY _ = 1 #}{# STRICTNESS _ = "0,0" ST #};
import _negate: (_Int->_Int) {# ARITY _ = 1 #}{# STRICTNESS _ = "0,0" ST #};
import _>=: (*a->(*a->_Bool)) {# ARITY _ = 2 #}{# STRICTNESS _ = "0&1,F" ST #};
import _<=: (*a->(*a->_Bool)) {# ARITY _ = 2 #}{# STRICTNESS _ = "0&1,F" ST #};
import _>: (*a->(*a->_Bool)) {# ARITY _ = 2 #}{# STRICTNESS _ = "0&1,F" ST #};
import _<: (*a->(*a->_Bool)) {# ARITY _ = 2 #}{# STRICTNESS _ = "0&1,F" ST #};
import _~=: (*a->(*a->_Bool)) {# ARITY _ = 2 #}{# STRICTNESS _ = "0&1,F" ST #};
import _=: (*a->(*a->_Bool)) {# ARITY _ = 2 #}{# STRICTNESS _ = "0&1,F" ST #};
