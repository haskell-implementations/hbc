import get_id_defd: ((List Mcode)->(List (List Char))) {# ARITY get_id_defd = 1 #}{# STRICTNESS get_id_defd = "0,F" ST #};
import get_id_used: ((List Mcode)->(List (List Char))) {# ARITY get_id_used = 1 #}{# STRICTNESS get_id_used = "0,F" ST #};
import move: (Addrmode->(Addrmode->(List Char))) {# ARITY move = 2 #}{# STRICTNESS move = "0,F" ST #};
import lea: (Addrmode->(Addrmode->(List Char))) {# ARITY lea = 2 #}{# STRICTNESS lea = "0,F" ST #};
import isreg: (Addrmode->Bool) {# ARITY isreg = 1 #}{# STRICTNESS isreg = "0,F" ST #};
import fixclbl: ((List Char)->(List Char)) {# ARITY fixclbl = 1 #}{# STRICTNESS fixclbl = "0,F" ST #};
import expand: ((List Char)->(Int->(List Char))) {# ARITY expand = 2 #}{# STRICTNESS expand = "0&1,F" ST #};
import emitlbl: ((List Char)->((List Char)->((List Char)->(List Char)))) {# ARITY emitlbl = 3 #}{# STRICTNESS emitlbl = "0,F" ST #};
import emit3: ((List Char)->((List Char)->((List Char)->(List Char)))) {# ARITY emit3 = 3 #}{# STRICTNESS emit3 = "0,F" ST #};
import dtmp2: Addrmode {# ARITY dtmp2 = 0 #}{# STRICTNESS dtmp2 = "F,T" ST #};
import dtmp1: Addrmode {# ARITY dtmp1 = 0 #}{# STRICTNESS dtmp1 = "F,T" ST #};
import aspr: ((List Char)->((List Addrmode)->(Int->((List (Char # (List Char)))->(List Char))))) {# ARITY aspr = 4 #}{# STRICTNESS aspr = "0,F" ST #};
import aop: (Operator->(Addrmode->(Addrmode->(List Char)))) {# ARITY aop = 3 #}{# STRICTNESS aop = "0,F" ST #};
import build_assoc: ((List Char)->((List *a)->((List (Char # *a)) # (List *a)))) {# ARITY build_assoc = 2 #}{# STRICTNESS build_assoc = "0,F" ST #};
import Rpr: Int {# ARITY Rpr = 0 #}{# STRICTNESS Rpr = "F,T" ST #};
import Vpr: Int {# ARITY Vpr = 0 #}{# STRICTNESS Vpr = "F,T" ST #};
import Spr: Int {# ARITY Spr = 0 #}{# STRICTNESS Spr = "F,T" ST #};
import Hpr: Int {# ARITY Hpr = 0 #}{# STRICTNESS Hpr = "F,T" ST #};
import isareg: (Addrmode->Bool) {# ARITY isareg = 1 #}{# STRICTNESS isareg = "0,F" ST #};
import regname: (Int->(List Char)) {# ARITY regname = 1 #}{# STRICTNESS regname = "0,0" ST #};
import otag: (Tag->String) {# ARITY otag = 1 #}{# STRICTNESS otag = "0,F" ST #};
import oajcc: (Conditioncode->((List Char)->(List Char))) {# ARITY oajcc = 2 #}{# STRICTNESS oajcc = "0,F" ST #};
import obcc: (Conditioncode->(Addrmode->(List Char))) {# ARITY obcc = 2 #}{# STRICTNESS obcc = "F,F" ST #};
import ojcc: (Conditioncode->((List Char)->(List Char))) {# ARITY ojcc = 2 #}{# STRICTNESS ojcc = "0,F" ST #};
import emit: ((List Char)->((List Char)->(List Char))) {# ARITY emit = 2 #}{# STRICTNESS emit = "F,F" ST #};
import comp: (Addrmode->(Addrmode->(Conditioncode->(List Char)))) {# ARITY comp = 3 #}{# STRICTNESS comp = "0,F" ST #};
import atmp1: Addrmode {# ARITY atmp1 = 0 #}{# STRICTNESS atmp1 = "F,T" ST #};
import amode: (Addrmode->(List Char)) {# ARITY amode = 1 #}{# STRICTNESS amode = "0,F" ST #};
import Rpreg: Addrmode {# ARITY Rpreg = 0 #}{# STRICTNESS Rpreg = "F,T" ST #};
import Vpreg: Addrmode {# ARITY Vpreg = 0 #}{# STRICTNESS Vpreg = "F,T" ST #};
import Spreg: Addrmode {# ARITY Spreg = 0 #}{# STRICTNESS Spreg = "F,T" ST #};
import Hpreg: Addrmode {# ARITY Hpreg = 0 #}{# STRICTNESS Hpreg = "F,T" ST #};
