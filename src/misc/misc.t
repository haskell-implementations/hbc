import concmap2: ((*a->(*b->(List *c)))->((List *a)->((List *b)->(List *c)))) {# ARITY _ = 3 #}{# STRICTNESS _ = "1,F" ST #};
import cons2: (*a->((*b # (List *a))->(*b # (List *a)))) {# ARITY _ = 2 #}{# STRICTNESS _ = "1,1" ST #};
import reduce2: ((*a->(*b->(*c->*c)))->(*c->((List *a)->((List *b)->*c)))) {# ARITY _ = 4 #}{# STRICTNESS _ = "2,F" ST #};
import reduce1: ((*a->(*a->*a))->((List *a)->*a)) {# ARITY _ = 2 #}{# STRICTNESS _ = "1,F" ST #};
import sndof4: ((#4 *a *b *c *d)->*b) {# ARITY _ = 1 #}{# STRICTNESS _ = "0,F" ST #};
import fstof3: ((#3 *a *b *c)->*a) {# ARITY _ = 1 #}{# STRICTNESS _ = "0,F" ST #};
import fstof4: ((#4 *a *b *c *d)->*a) {# ARITY _ = 1 #}{# STRICTNESS _ = "0,F" ST #};
import map4: ((*a->(*b->(*c->(*d->*e))))->((List *a)->((List *b)->((List *c)->((List *d)->(List *e)))))) {# ARITY _ = 5 #}{# STRICTNESS _ = "1,F" ST #};
import map3: ((*a->(*b->(*c->*d)))->((List *a)->((List *b)->((List *c)->(List *d))))) {# ARITY _ = 4 #}{# STRICTNESS _ = "1,F" ST #};
import getyes: ((OK *a *b)->*b) {# ARITY _ = 1 #}{# STRICTNESS _ = "0,F" ST #};
import isno: ((OK *a *b)->Bool) {# ARITY _ = 1 #}{# STRICTNESS _ = "0,0" ST #};
import oktestconc: ((List (OK *a (List *b)))->(OK *a (List *b))) {# ARITY _ = 1 #}{# STRICTNESS _ = "0,F" ST #};
import testconc: ((List (Option (List *a)))->(Option (List *a))) {# ARITY _ = 1 #}{# STRICTNESS _ = "0,F" ST #};
import mapfiltersnd: ((*a->(Option *b))->((List (*c # *a))->(List (*c # *b)))) {# ARITY _ = 2 #}{# STRICTNESS _ = "1,F" ST #};
import mapfilter: ((*a->(Option *b))->((List *a)->(List *b))) {# ARITY _ = 2 #}{# STRICTNESS _ = "1,F" ST #};
import ynsplit: ((List (OK *a *b))->((List *b)->((List *a)->((List *b) # (List *a))))) {# ARITY _ = 3 #}{# STRICTNESS _ = "0,F" ST #};
import getdups: ((*a->(*a->Bool))->((List *a)->(List *a))) {# ARITY _ = 2 #}{# STRICTNESS _ = "1,F" ST #};
import mixmap: ((*a->(List *b))->((List *a)->((List *b)->(List *b)))) {# ARITY _ = 3 #}{# STRICTNESS _ = "1,F" ST #};
import findf: ((List *a)->((*a->Bool)->((*a->*b)->(*b->*b)))) {# ARITY _ = 4 #}{# STRICTNESS _ = "0,F" ST #};
import gsome: ((Option (List *a))->(List *a)) {# ARITY _ = 1 #}{# STRICTNESS _ = "0,F" ST #};
import oapply: ((*a->*b)->((Option *a)->(Option *b))) {# ARITY _ = 2 #}{# STRICTNESS _ = "1,1" ST #};
import Umap4: ((*a->(*b->(*c->(*d->(*e->(*f # *e))))))->((List *a)->((List *b)->((List *c)->((List *d)->(*e->((List *f) # *e))))))) {# ARITY _ = 6 #}{# STRICTNESS _ = "1,F" ST #};
import Umap3: ((*a->(*b->(*c->(*d->(*e # *d)))))->((List *a)->((List *b)->((List *c)->(*d->((List *e) # *d)))))) {# ARITY _ = 5 #}{# STRICTNESS _ = "1,F" ST #};
import split4: ((List (#4 *a *b *c *d))->(#4 (List *a) (List *b) (List *c) (List *d))) {# ARITY _ = 1 #}{# STRICTNESS _ = "0,F" ST #};
import split3: ((List (#3 *a *b *c))->(#3 (List *a) (List *b) (List *c))) {# ARITY _ = 1 #}{# STRICTNESS _ = "0,F" ST #};
import Umap2: ((*a->(*b->(*c->(*d # *c))))->((List *a)->((List *b)->(*c->((List *d) # *c))))) {# ARITY _ = 4 #}{# STRICTNESS _ = "1,F" ST #};
import thd: ((#3 *a *b *c)->*c) {# ARITY _ = 1 #}{# STRICTNESS _ = "0,F" ST #};
import butlast: ((List *a)->(List *a)) {# ARITY _ = 1 #}{# STRICTNESS _ = "0,F" ST #};
import mapthd: ((*a->*b)->((List (#3 *c *d *a))->(List (#3 *c *d *b)))) {# ARITY _ = 2 #}{# STRICTNESS _ = "1,F" ST #};
import Umapthd: ((*a->(*b->(*c # *b)))->((List (#3 *d *e *a))->(*b->((List (#3 *d *e *c)) # *b)))) {# ARITY _ = 3 #}{# STRICTNESS _ = "1,F" ST #};
import Umapsnd: ((*a->(*b->(*c # *b)))->((List (*d # *a))->(*b->((List (*d # *c)) # *b)))) {# ARITY _ = 3 #}{# STRICTNESS _ = "1,F" ST #};
import Uap: ((*a->*b)->((*a # *c)->(*b # *c))) {# ARITY _ = 2 #}{# STRICTNESS _ = "1,1" ST #};
import Umap: ((*a->(*b->(*c # *b)))->((List *a)->(*b->((List *c) # *b)))) {# ARITY _ = 3 #}{# STRICTNESS _ = "1,F" ST #};
import Uconcmap: ((*a->(*b->((List *c) # *b)))->((List *a)->(*b->((List *c) # *b)))) {# ARITY _ = 3 #}{# STRICTNESS _ = "1,F" ST #};
