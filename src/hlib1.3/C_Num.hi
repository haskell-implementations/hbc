interface PreludeX where {
class (Eq a, Eval a, Show a) => Num a where {
    (+) :: a -> a -> a;
    (-) :: a -> a -> a;
    (*) :: a -> a -> a;
    negate :: a -> a;
    abs :: a -> a;
    signum :: a -> a;
    fromInteger :: Integer -> a;
    fromInt :: Int -> a;
    {-:"PfromInteger":-} :: (Integer, Int, Double) -> a
    }
}
