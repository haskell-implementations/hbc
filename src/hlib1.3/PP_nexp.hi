interface PreludeX where {
(^) :: (Num a, Integral b) => a -> b -> a   {-# ARITY _ = 4 #-}{-# STRICTNESS _ = "T,F" ST #-}{-# SPECIALIZE (^) :: Float -> Int -> Float {-# ARITY _ = 2 #-}{-# STRICTNESS _ = "1,F" ST #-}, Double -> Int -> Double {-# ARITY _ = 2 #-}{-# STRICTNESS _ = "1,F" ST #-}, Integer -> Int -> Integer {-# ARITY _ = 2 #-}{-# STRICTNESS _ = "1,F" ST #-}, Int -> Int -> Int {-# ARITY _ = 2 #-}{-# STRICTNESS _ = "1,F" ST #-} #-}
}
