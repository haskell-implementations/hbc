
module PreludeX where
instance Ord Char where
        compare x y = if {-:"MM`Prelude.Ord`Prelude.Char`<":-} x y then LT else if {-:"MM`Prelude.Ord`Prelude.Char`>":-} x y then GT else EQ
	x <  y = {-:"MM`Prelude.Ord`Prelude.Char`<":-}  x y
	x <= y = {-:"MM`Prelude.Ord`Prelude.Char`<=":-} x y
	x >  y = {-:"MM`Prelude.Ord`Prelude.Char`>":-}  x y
	x >= y = {-:"MM`Prelude.Ord`Prelude.Char`>=":-} x y
	max x y = if {-:"MM`Prelude.Ord`Prelude.Char`>":-} x y then x else y
	min x y = if {-:"MM`Prelude.Ord`Prelude.Char`<":-} x y then x else y

